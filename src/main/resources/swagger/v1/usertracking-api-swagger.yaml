openapi: 3.0.0
info:
  version: 0.0.1
  title: User
servers:
  - url: https://api.example.com/api
paths:
  "/v1/users":
    x-swagger-router-controller: users
    get:
      summary: Get all users for user.
      operationId: queryAllUsers
      tags:
        - User
      parameters:
        - name: pcid
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user-tracking-list-response"
        "400":
          description: invalid request
        "404":
          description: user not found
    post:
      summary: create a new user for user
      tags:
        - User
      operationId: createUser
      requestBody:
        $ref: "#/components/requestBodies/user-tracking-bare"
      responses:
        "201":
          description: user created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user-tracking"
        "400":
          description: error, tbd.
  "/v1/users/{uid}":
    x-swagger-router-controller: user
    get:
      summary: get user user by ids
      tags:
        - User
      operationId: getUser
      parameters:
        - name: uid
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user-tracking"
        "400":
          description: Invalid ID
        "404":
          description: user not found
    put:
      summary: update an user
      tags:
        - User
      operationId: updateUser
      parameters:
        - name: uid
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/user-tracking-bare"
      responses:
        "202":
          description: user updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user-tracking-bare"
        "400":
          description: error, tbd.
    delete:
      summary: delete user
      tags:
        - User
      operationId: deleteUser
      parameters:
        - name: uid
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        "200":
          description: user deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response-message"
        "400":
          description: Invalid ID supplied
        "404":
          description: user not found

  /swagger:
    x-swagger-pipe: swagger_raw
components:
  requestBodies:
    user-tracking-bare:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user-tracking-bare"
      description: new user
  schemas:
    ###
    ###  user object
    ###
    user-tracking-bare:
      required: #null
        - email
        - userNumber
        - contactInfo
        - selectedPlan
        - typeOfUser
      type: object
      properties:
        email:
          nullable: false
          type: string
          minLength: 1  #length: empty
          format: email #email
          example: abc@demo.in
        userNumber:
          type: string
          minLength: 1  #length: empty
          pattern: "[0-9]{8}(|/[A-Z]{1}|/[0-9]{1})" #pattern
          example: '12345678'
        contactInfo:
          type: array
          items:
            $ref: '#/components/schemas/contact-info'
          minItems: 1
        selectedPlan:
          type: integer
          minimum: 1
          example: 1
        auditModel:
          $ref: '#/components/schemas/audit-model'
        typeOfUser:
          type: string
          minLength: 1  #length: empty
          enum:
            - asc
            - desc

    contact-info:
      type: object
      required:  #null
        - firstName
      properties:
        firstName:
          type: string
          minLength: 1  #length: empty
        lastName:
          type: string
        phone:
          type: string
        anotherModel:
          $ref: '#/components/schemas/another-model'
    audit-model:
      required:
        - createdDate
      type: object
      properties:
        createdDate:
          type: string
          example: "2020-06-22"
        updateDate:
          type: string
          example: "2020-06-22 11.10.222"
    another-model:
      required:
        - testName
      type: object
      properties:
        testName:
          type: string
          example: "2020-06-22"
          minLength: 1  #length: empty
    user-tracking-list-response:
      type: object
      properties:
        count:
          type: integer
          example: 15
        items:
          type: array
          items:
            $ref: "#/components/schemas/user-tracking"
    user-tracking:
      type: object
      properties:
        id:
          type: string
          example: e2a40b33-a11a-4938-8111-07acf5758977
          format: uuid
        data:
          $ref: "#/components/schemas/user-tracking-bare"
    response-message:
      type: object
      properties:
        message:
          type: string
          example: deleted successfully